<<<<<<< HEAD
<<<<<<< HEAD
1)
#include <iostream>
#include<string>
using namespace std;
int countChar( string str , char character){
    int occurence=0;
    for ( int i=0;i<str.length();i++){
        if( str[i]==character){
            occurence++;
        }
    }
    return occurence;
}

 char substring( string str, int start, int end){

   
     for ( int iterator=start ; iterator<=end ; iterator++){
         cout<<str[iterator];
     }
     
 }
 
 char split( string str , char toSplit){
     for( int i=0;i<str.length();i++){
         if(str[i]!=toSplit){
             cout<<str[i];
         }
         else{
             cout<<endl<<str[i];
         }
     }
     
}

bool pattern( string str, string p){
   int k=0;
   bool flag=0;
        for( int j=0;j<p.length();j++){
            for(  int i=0;i<str.length();i++){
            if(p[j]==str[i]){
                while(k<p.length()){
                    if(str[i]!=p[k]){
                        flag=0;
                        return false;
                    }
                    else{
                        i++;
                        k++;
                        flag=1;
                    }
                   
                }
            }
            }
        }
       
     
    if (flag==1){
        return true;
    }
    else
    {
        return false;
    }
}



bool allWordsContainsChar( string Second_string , char to_find){
    bool flag=0;
    for( int i=0;i<Second_string.length();i++ ){
        if(Second_string[i]==to_find){
            flag=1;
        }
        else if(Second_string[i]==' '){
            if(flag==1){
                flag=0;
            }
            else{
                return false;
            }
        }
    }
    if ( flag=0){
        return false;
    }
    else{
        return true;
    }
}



int main()
{
 string str="abcdefghijkl";
 
//   char character='m';
//  cout<<"occurence of "<<character<<" is ";
//  cout<<countChar(str,character)<<endl;

//   int start=1;
//   int end=4;
// cout<<"substring from "<<start<<" to "<< end<<endl;
// cout<<substring(str,start,end)<<endl;;
   
//     char toSplit='d                ';
//     cout<<"splitted substrings are:";
//     cout<<split(str , toSplit)<<endl;
     
   
   
   
    //   string p="cdefg";        //pattern
     
    // cout<<"pattern found or not ";
    //  cout<<pattern(str,p)<<endl;
     
     
     string Second_string="abcd aklm aghi";
     char to_find='a';
     cout<<allWordsContainsChar(Second_string , to_find)<<endl;
     
     
    return 0;
   
}

2) longest substring

#include <iostream>
using namespace std;
int main()
{
int m, n, value;
cin>>m>>n>>value;
int arr[m][n];
for(int i=0; i<m; i++)
{
    for(int j=0; j<n; j++)
    {
        cin>>arr[i][j];
    }
    
}
bool flag=0;
for(int i=0; i<m; i++)
{
    if(arr[i][0]<=value)
    {
        for(int j=0; j<n; j++)
        {
            if(arr[i][j]==value)
            {
                cout<<true;
                flag=1;
            }
        }
    }
}
if(flag==0)
cout<<false;
return 0;
}
=======
1)
#include <iostream>
#include<string>
using namespace std;
int countChar( string str , char character){
    int occurence=0;
    for ( int i=0;i<str.length();i++){
        if( str[i]==character){
            occurence++;
        }
    }
    return occurence;
}

 char substring( string str, int start, int end){

   
     for ( int iterator=start ; iterator<=end ; iterator++){
         cout<<str[iterator];
     }
     
 }
 
 char split( string str , char toSplit){
     for( int i=0;i<str.length();i++){
         if(str[i]!=toSplit){
             cout<<str[i];
         }
         else{
             cout<<endl<<str[i];
         }
     }
     
}

bool pattern( string str, string p){
   int k=0;
   bool flag=0;
        for( int j=0;j<p.length();j++){
            for(  int i=0;i<str.length();i++){
            if(p[j]==str[i]){
                while(k<p.length()){
                    if(str[i]!=p[k]){
                        flag=0;
                        return false;
                    }
                    else{
                        i++;
                        k++;
                        flag=1;
                    }
                   
                }
            }
            }
        }
       
     
    if (flag==1){
        return true;
    }
    else
    {
        return false;
    }
}



bool allWordsContainsChar( string Second_string , char to_find){
    bool flag=0;
    for( int i=0;i<Second_string.length();i++ ){
        if(Second_string[i]==to_find){
            flag=1;
        }
        else if(Second_string[i]==' '){
            if(flag==1){
                flag=0;
            }
            else{
                return false;
            }
        }
    }
    if ( flag=0){
        return false;
    }
    else{
        return true;
    }
}



int main()
{
 string str="abcdefghijkl";
 
//   char character='m';
//  cout<<"occurence of "<<character<<" is ";
//  cout<<countChar(str,character)<<endl;

//   int start=1;
//   int end=4;
// cout<<"substring from "<<start<<" to "<< end<<endl;
// cout<<substring(str,start,end)<<endl;;
   
//     char toSplit='d                ';
//     cout<<"splitted substrings are:";
//     cout<<split(str , toSplit)<<endl;
     
   
   
   
    //   string p="cdefg";        //pattern
     
    // cout<<"pattern found or not ";
    //  cout<<pattern(str,p)<<endl;
     
     
     string Second_string="abcd aklm aghi";
     char to_find='a';
     cout<<allWordsContainsChar(Second_string , to_find)<<endl;
     
     
    return 0;
   
}

2) longest substring

#include <iostream>
using namespace std;
int main()
{
int m, n, value;
cin>>m>>n>>value;
int arr[m][n];
for(int i=0; i<m; i++)
{
    for(int j=0; j<n; j++)
    {
        cin>>arr[i][j];
    }
    
}
bool flag=0;
for(int i=0; i<m; i++)
{
    if(arr[i][0]<=value)
    {
        for(int j=0; j<n; j++)
        {
            if(arr[i][j]==value)
            {
                cout<<true;
                flag=1;
            }
        }
    }
}
if(flag==0)
cout<<false;
return 0;
}
>>>>>>> a6d27f4eb436473b0397e7ae3509d2f9c3790912
=======
1)
#include <iostream>
#include<string>
using namespace std;
int countChar( string str , char character){
    int occurence=0;
    for ( int i=0;i<str.length();i++){
        if( str[i]==character){
            occurence++;
        }
    }
    return occurence;
}

 char substring( string str, int start, int end){

   
     for ( int iterator=start ; iterator<=end ; iterator++){
         cout<<str[iterator];
     }
     
 }
 
 char split( string str , char toSplit){
     for( int i=0;i<str.length();i++){
         if(str[i]!=toSplit){
             cout<<str[i];
         }
         else{
             cout<<endl<<str[i];
         }
     }
     
}

bool pattern( string str, string p){
   int k=0;
   bool flag=0;
        for( int j=0;j<p.length();j++){
            for(  int i=0;i<str.length();i++){
            if(p[j]==str[i]){
                while(k<p.length()){
                    if(str[i]!=p[k]){
                        flag=0;
                        return false;
                    }
                    else{
                        i++;
                        k++;
                        flag=1;
                    }
                   
                }
            }
            }
        }
       
     
    if (flag==1){
        return true;
    }
    else
    {
        return false;
    }
}



bool allWordsContainsChar( string Second_string , char to_find){
    bool flag=0;
    for( int i=0;i<Second_string.length();i++ ){
        if(Second_string[i]==to_find){
            flag=1;
        }
        else if(Second_string[i]==' '){
            if(flag==1){
                flag=0;
            }
            else{
                return false;
            }
        }
    }
    if ( flag=0){
        return false;
    }
    else{
        return true;
    }
}



int main()
{
 string str="abcdefghijkl";
 
//   char character='m';
//  cout<<"occurence of "<<character<<" is ";
//  cout<<countChar(str,character)<<endl;

//   int start=1;
//   int end=4;
// cout<<"substring from "<<start<<" to "<< end<<endl;
// cout<<substring(str,start,end)<<endl;;
   
//     char toSplit='d                ';
//     cout<<"splitted substrings are:";
//     cout<<split(str , toSplit)<<endl;
     
   
   
   
    //   string p="cdefg";        //pattern
     
    // cout<<"pattern found or not ";
    //  cout<<pattern(str,p)<<endl;
     
     
     string Second_string="abcd aklm aghi";
     char to_find='a';
     cout<<allWordsContainsChar(Second_string , to_find)<<endl;
     
     
    return 0;
   
}

2) longest substring

#include <iostream>
using namespace std;
int main()
{
int m, n, value;
cin>>m>>n>>value;
int arr[m][n];
for(int i=0; i<m; i++)
{
    for(int j=0; j<n; j++)
    {
        cin>>arr[i][j];
    }
    
}
bool flag=0;
for(int i=0; i<m; i++)
{
    if(arr[i][0]<=value)
    {
        for(int j=0; j<n; j++)
        {
            if(arr[i][j]==value)
            {
                cout<<true;
                flag=1;
            }
        }
    }
}
if(flag==0)
cout<<false;
return 0;
}
>>>>>>> a6d27f4eb436473b0397e7ae3509d2f9c3790912
